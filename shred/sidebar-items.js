initSidebarItems({"enum":[["RunningTime",""]],"struct":[["AsyncDispatcher","Like, `Dispatcher` but works asynchronously."],["Dispatcher","The dispatcher struct, allowing systems to be executed in parallel."],["DispatcherBuilder","Builder for the [`Dispatcher`]."],["Fetch","Return value of [`Resources::fetch`]."],["FetchId","Return value of [`Resources::fetch_id`]."],["FetchIdMut","Return value of [`Resources::fetch_id_mut`]."],["FetchMut","Return value of [`Resources::fetch_mut`]."],["ResourceId","The id of a [`Resource`], which is a tuple struct with a type id and an additional resource id (represented with a `usize`)."],["Resources","A resource container, which provides methods to access to the contained resources."]],"trait":[["Resource","A resource defines a set of data which can only be accessed according to Rust's typical borrowing model (one writer xor multiple readers)."],["RunNow","Trait for fetching data and running systems. Automatically implemented for systems."],["System","A `System`, executed with a set of required [`Resource`]s."],["SystemData","A struct implementing system data indicates that it bundles some resources which are required for the execution."]]});